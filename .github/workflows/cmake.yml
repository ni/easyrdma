name: CMake

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.1
        id: install-boost
        with:
          # Please update CONTIRBUTING.md if the version is changed
          boost_version: 1.71.0
          
      - name: Setup NuGet
        if: ${{ matrix.os == 'windows-latest' }}
        uses: NuGet/setup-nuget@v1.1.1
        with:
          nuget-version: '5.x'
        
      - name: Install NetworkDirect
        if: ${{ matrix.os == 'windows-latest' }}
        # Please update CONTIRBUTING.md if the version is changed
        run: mkdir -p objects/nuget && cd objects/nuget && nuget install NetworkDirect -Version 2.0.1
      
      - name: Configure rdma-core
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt install -y rdma-core librdmacm-dev libibverbs-dev
          mkdir -p objects/rdma_core/includes/rdma
          cp -Rf /usr/include/rdma objects/rdma_core/includes/rdma
          mkdir -p objects/rdma_core/includes/infiniband
          cp -Rf /usr/include/infiniband objects/rdma_core/includes/infiniband
          cp -Rf /lib/modules/*/build/include/uapi/rdma/* objects/rdma_core/includes/rdma
          mkdir -p objects/rdma_core/lib/
          cp -Rf /usr/lib/*/libibverbs.so objects/rdma_core/lib
          cp -Rf /usr/lib/*/librdmacm.so objects/rdma_core/lib

      - name: Configure CMake for Windows
        if: ${{ matrix.os == 'windows-latest' }}      
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBoost_LIBRARY_DIRS=${{env.BOOST_ROOT}}/lib -DNetDirect_HEADER_DIR=${{env.ND_INCLUDE}} -DNetDirect_LIBRARYDIR=${{env.ND_LIBRARY}}        
        env:
          BOOST_ROOT: ${{steps.install-boost.outputs.BOOST_ROOT}}
          ND_INCLUDE: ${{github.workspace}}/objects/nuget/NetworkDirect.2.0.1/include
          ND_LIBRARY: ${{github.workspace}}/objects/nuget/NetworkDirect.2.0.1/lib/x64

      - name: Configure CMake for Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}      
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBoost_LIBRARY_DIRS=${{env.BOOST_ROOT}}/lib -DVERBS_HEADER_DIR=${{env.VERBS_HEADER}} -DVERBS_LIB_DIR=${{env.VERBS_LIB}}        
        env:
          BOOST_ROOT: ${{steps.install-boost.outputs.BOOST_ROOT}}
          VERBS_HEADER: ${{github.workspace}}/objects/rdma_core/includes
          VERBS_LIB: ${{github.workspace}}/objects/rdma_core/lib

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
